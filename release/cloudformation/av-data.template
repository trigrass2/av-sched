{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "AV Data",

    "Parameters" : {

        "EnvName" :                 { "Type" : "String", "Description" : "from net stack" },
        "EnvType" :                 { "Type" : "String", "Description" : "from net stack" },
        "NetworkPrefix" :           { "Type" : "String", "Description" : "from net stack" },
        "PublicWithVpnRouteTable" : { "Type" : "String", "Description" : "from net stack" },
        "Vpc" :                     { "Type" : "String", "Description" : "from net stack" },
        "PrivateSubnetA" :          { "Type" : "String", "Description" : "from net stack" },
        "PrivateSubnetB" :          { "Type" : "String", "Description" : "from net stack" },
        "PrivateSubnetC" :          { "Type" : "String", "Description" : "from net stack" },
        "PrivateSecurityGroup" :    { "Type" : "String", "Description" : "from net stack" },
        "S3LoggingBucket" :         { "Type" : "String", "Description" : "from net stack" },
        "AlarmSNSTopic" :           { "Type" : "String", "Description" : "from net stack" },
        
    
        "LegacyEnvName": {
            "Description" : "The default envName used for writing files to av-data s3 bucket (M2MOP for prod).",
            "Type": "String",
            "AllowedPattern" : "[A-Za-z0-9]+",
            "MinLength" : 2,
            "MaxLength" : 15
        },

        "InstanceType" : {
            "Description" : "AvData EC2 instance type",
            "Type" : "String",
            "Default" : "t2.medium",
            "AllowedValues" : [ "t2.micro", "t2.small", "t2.medium", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge" ],
            "ConstraintDescription" : "must be a valid EC2 instance type."
        },

        "KeyPair" : {
            "Description" : "Amazon EC2 Key Pair",
            "Type" : "AWS::EC2::KeyPair::KeyName"
        },

        "AppVersion" : {
            "Description" : "The version of the application: used to fetch artifact",
            "Type" : "String"
        },

        "AVBaseAMI": {
            "Description" : "Base AMI used to launch av-data",
            "Type": "String"
        }
    },

    "Resources": {

        "AvDataDnsCname" : {
            "Type" : "AWS::Route53::RecordSet",
            "Properties" : {
                "HostedZoneName" : { "Fn::Join" : ["", [ { "Ref": "EnvName" }, "-airvantage.net." ] ] },
                "Name" : { "Fn::Join" : ["", [ "av-data.", { "Ref": "EnvName" }, "-airvantage.net" ] ] },
                "Type" : "CNAME",
                "TTL" : "900",
                "ResourceRecords" : [
                    { "Fn::GetAtt" : [ "AvDataELB", "DNSName" ] }
                ]
            }
        },

        "AvDataS3Bucket" : {
           "Type" : "AWS::S3::Bucket",
           "Properties" : {
              "BucketName" : { "Fn::Join" : ["", [ { "Ref": "EnvName" }, "-av-data"  ] ] } ,
              "Tags": [ { "Key": "Name", "Value": { "Fn::Join" : ["", [ { "Ref": "EnvName" }, "-data-bucket" ] ] } } ]
           }
        },

        "AvDataELB": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "LoadBalancerName": { "Fn::Join" : ["", [ { "Ref": "EnvName" }, "-av-data-elb" ] ] },
                "SecurityGroups": [{"Ref": "PrivateSecurityGroup"}],
                "Scheme": "internal",
                "CrossZone": true,
                "Subnets": [
                    { "Ref": "PrivateSubnetA" },
                    { "Ref": "PrivateSubnetB" },
                    { "Ref": "PrivateSubnetC" }
                ],
                "HealthCheck": {
                    "Target": "HTTP:8080/data/admin/status",
                    "Timeout": 2,
                    "Interval": 5,
                    "UnhealthyThreshold": 6,
                    "HealthyThreshold": 2
                },
                "Listeners": [ {
                    "InstancePort": 8080,
                    "LoadBalancerPort": 80,
                    "Protocol": "HTTP"
                } ],
                "AccessLoggingPolicy": {
                    "S3BucketName": { "Ref": "S3LoggingBucket" },
                    "S3BucketPrefix": "elb-access-logs/av-data",
                    "Enabled": "true",
                    "EmitInterval" : "5"
                }
            }
        },

        "AvDataAutoScale": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "AvailabilityZones": { "Fn::GetAZs": "" },
                "VPCZoneIdentifier": [
                    { "Ref": "PrivateSubnetA" },
                    { "Ref": "PrivateSubnetB" },
                    { "Ref": "PrivateSubnetC" }
                ],
                "HealthCheckGracePeriod": 900,
                "HealthCheckType": "ELB",
                "LaunchConfigurationName": { "Ref": "AvDataLaunchConfig" },
                "LoadBalancerNames": [ { "Ref": "AvDataELB" } ],
                "MaxSize": 2,
                "MinSize": 1,
                "DesiredCapacity": 1,
                "Tags": [ {
                    "Key": "Name",
                    "Value": { "Fn::Join" : ["", [ { "Ref": "EnvName" }, "-av-data-asg" ] ] },
                    "PropagateAtLaunch": true
                } ]
            },
            "UpdatePolicy": {
                "AutoScalingRollingUpdate": {
                    "MaxBatchSize": 1,
                    "PauseTime": "PT5M"
                }
            }
        },

         "AvDataStatusAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Notify when Av-Data is down",
                "MetricName": "UnHealthyHostCount",
                "Namespace": "AWS/ELB",
                "Statistic": "Average",
                "Period": "300",
                "EvaluationPeriods": "2",
                "Threshold": "0",
                "AlarmActions": [ { "Ref": "AlarmSNSTopic" } ],
                "Dimensions": [
                    { "Name": "LoadBalancerName", "Value": { "Ref": "AvDataELB" } }
                ],
                "ComparisonOperator": "GreaterThanThreshold",
                "Unit": "Count"
            }
        },

        "AvDataRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version" : "2012-10-17",
                    "Statement": [ {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [ "ec2.amazonaws.com" ]
                        },
                        "Action": [ "sts:AssumeRole" ]
                    } ]
                },
                "Path": "/",
                "Policies": [ {
                    "PolicyName": "root",
                    "PolicyDocument": {
                        "Version" : "2012-10-17",
                        "Statement": [ {
                            "Effect": "Allow",
                            "Action": [ "s3:*" ],
                            "Resource": [ "arn:aws:s3:::av-repo/*", "arn:aws:s3:::av-repo" ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [ "s3:Get*", "s3:List*" ],
                            "Resource": { "Fn::Join" : [ "", [ "arn:aws:s3:::av-" , { "Ref": "EnvType" }, "-secrets*" ] ] }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [ "s3:Get*", "s3:List*", "s3:Put*" ],
                            "Resource": [ { "Fn::Join" : ["", [ "arn:aws:s3:::av-data-", { "Ref": "EnvName" }, "/*" ] ] }, { "Fn::Join" : ["", [ "arn:aws:s3:::av-data-", { "Ref": "EnvName" } ] ] } ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [ "s3:Delete*" ],
                            "Resource": { "Fn::Join" : ["", [ "arn:aws:s3:::av-data-", { "Ref": "EnvName" }, "/avop/*/dw/job/*" ] ] }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [ "s3:Put*" ],
                            "Resource": "arn:aws:s3:::av-central/data/incoming/*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [ "elasticmapreduce:*", "iam:PassRole", "ec2:RequestSpotInstances", "ec2:RunInstances" ],
                            "Resource": "*"
                        } ]
                    }
               } ]
            }
        },

        "AvDataInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [ { "Ref": "AvDataRole" } ]
            }
        },

        "AvDataLaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": { "Ref" : "AVBaseAMI" },
                "InstanceType": { "Ref": "InstanceType" },
                "KeyName": { "Ref": "KeyPair" },
                "SecurityGroups": [ { "Ref": "PrivateSecurityGroup" } ],
                "IamInstanceProfile": { "Ref": "AvDataInstanceProfile" },
                "BlockDeviceMappings" : [ {
                    "DeviceName" : "/dev/xvda",
                    "Ebs" : { "VolumeSize" : "50", "VolumeType": "gp2" }
                } ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#cloud-config\n\n",
                                "coreos:\n",
                                
                                "   update:\n",
                                "       reboot-strategy: off\n\n",

                                "   units:\n",

                                "    - name: av-log.service\n",
                                "      command: start\n",

                                "    - name: av-keys.timer\n",
                                "      command: start\n",

                                "    - name: download-av-data-jar.service\n",
                                "      command: start\n",
                                "      content: |\n",
                                "        [Unit]\n",
                                "        Description=download-av-data-jar\n",
                                "        After=docker.service\n",
                                "        Requires=docker.service\n", "\n",
                                "        [Service]\n",
                                "        WorkingDirectory=/home/core/\n",
                                "        Type=oneshot\n",
                                "        RemainAfterExit=yes\n",
                                "        User=core\n",
                                "        ExecStart=/opt/bin/aws s3 cp s3://av-repo/apps/av-data/", { "Ref": "AppVersion" }, "/artifacts/av-data.jar ./av-data/\n",
                                "        [Install]\n",
                                "        WantedBy=multi-user.target\n",

                                "    - name: av-data.service\n",
                                "      command: start\n",
                                "      content: |\n",
                                "        [Unit]\n",
                                "        Description=av-data\n",
                                "        After=av-log.service\n",
                                "        After=download-av-data-jar.service\n" , "\n",
                                "        [Service]\n",
                                "        User=core\n",
                                "        TimeoutStartSec=0\n",
                                "        Restart=on-failure\n",
                                "        RestartSec=5\n",
                                "        ExecStartPre=-/usr/bin/docker kill av-data\n",
                                "        ExecStartPre=-/usr/bin/docker rm av-data\n",
                                "        ExecStart=/usr/bin/docker run --name=av-data -p 8080:8080 --link av-log:av-log -v /etc/av-data:/etc/av-data -v /home/core/av-data:/var/av-data --entrypoint /usr/bin/java airvantage/av-java -DAVDATA_CONF_DIR=/etc/av-data -Dlogback.configurationFile=/etc/av-data/logback.xml -jar /var/av-data/av-data.jar\n",
                                "        [Install]\n",
                                "        WantedBy=multi-user.target\n",

                                "write_files:\n",

                                " -  path: /etc/av/environment\n",
                                "    permissions: '0744'\n",
                                "    owner: core\n",
                                "    content: |\n",
                                "       AV_ENVIRONMENT_TYPE=", { "Ref": "EnvType" }, "\n",
                                "       AV_ENVIRONMENT_NAME=", { "Ref": "EnvName" }, "\n",
                                "       AV_APPLICATION=av-data\n",

                                " -  path: /etc/av-data/deploy-data-local.properties\n",
                                "    permissions: '0744'\n",
                                "    owner: core\n",
                                "    content: |\n",
                                "       av-data.local.tmp.dir=/tmp/log\n",
                                "       av-data.version=", { "Ref": "AppVersion" }, "\n",
                                "       av-data.s3.bucket.name=", { "Ref": "EnvName" },  "-av-data\n",
                                "       av-data.data-center=", { "Ref": "EnvType" }, "\n",
                                "       av-data.client.default.env.name=", { "Ref": "LegacyEnvName" }, "\n",
                                "       av-data.env.name=", { "Ref": "EnvName" }, "\n",
                                "       av-data.emr.subnet.id=", { "Ref": "EMRPublicSubnet" }, "\n",
                                "       av-data.emr.master.instance.type=m3.xlarge\n",
                                "       av-data.emr.core.instance.count=3\n",
                                "       av-data.emr.core.instance.type=c3.xlarge\n",
                                "       av-data.emr.core.bid.price=0.478\n",
                                "       av-data.emr.role=", { "Ref": "AvDataEMRRole" }, "\n",
                                "       av-data.emr.instance.role=", { "Ref": "AvDataEMREC2InstanceProfile" }, "\n",
                                "       av-data.emr.keypair=", { "Ref": "KeyPair" }, "\n",

                                " -  path: /etc/av-data/logback.xml\n",
                                "    permissions: 0644\n",
                                "    owner: core\n",
                                "    content: |\n",
                                "      <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
                                "      <configuration scan=\"true\" scanPeriod=\"10 seconds\">\n",
                                "       <appender name=\"SYSLOG\" class=\"ch.qos.logback.classic.net.SyslogAppender\">\n",
                                "           <syslogHost>av-log</syslogHost>\n",
                                "           <facility>LOCAL0</facility>\n",
                                "           <suffixPattern>av-data [%-16.16thread] %-32.32logger{32} %msg%n%xException</suffixPattern>\n",
                                "           <throwableExcluded>true</throwableExcluded>\n",
                                "       </appender>\n",
                                "       <root level=\"info\">\n",
                                "           <appender-ref ref=\"SYSLOG\" />\n",
                                "       </root>\n",
                                "      </configuration>\n"
                            ]
                        ]
                    }
                }
            }
        },

        "EMRPublicSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": { "Fn::Join" : ["", [ { "Ref": "NetworkPrefix" }, "96.0/21" ] ] },
                "AvailabilityZone": { "Fn::Join" : ["", [ { "Ref" : "AWS::Region" }, "a" ] ] },
                "VpcId": { "Ref": "Vpc" },
                "Tags": [ { "Key": "Name", "Value": { "Fn::Join" : ["", [ { "Ref": "EnvName" }, "-emr-subnet-a" ] ] } } ]
            }
        },

        "EMRSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": { "Ref": "PublicWithVpnRouteTable" },
                "SubnetId": { "Ref": "EMRPublicSubnet" }
            }
        },

        "AvDataEMRRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2008-10-17", 
                    "Statement": [ {
                        "Sid": "",                    
                        "Effect": "Allow",                     
                        "Principal": {
                            "Service": [
                                "elasticmapreduce.amazonaws.com"                   
                            ]
                        },
                        "Action": "sts:AssumeRole"
                    } ]
                },
                "Path": "/",
                "Policies": [ {
                    "PolicyName": "root",
                    "PolicyDocument": {
                        "Version" : "2012-10-17",
                        "Statement": [ {
                            "Action": [
                                "ec2:AuthorizeSecurityGroupIngress",
                                "ec2:CancelSpotInstanceRequests",
                                "ec2:CreateSecurityGroup",
                                "ec2:CreateTags",
                                "ec2:DeleteTags",
                                "ec2:Describe*",
                                "ec2:ModifyImageAttribute",
                                "ec2:ModifyInstanceAttribute",
                                "ec2:RequestSpotInstances",
                                "ec2:RunInstances",
                                "ec2:TerminateInstances",
                                "iam:PassRole",
                                "iam:ListRolePolicies",
                                "iam:GetRole",
                                "iam:GetRolePolicy",
                                "iam:ListInstanceProfiles",
                                "s3:Get*",
                                "s3:CreateBucket",
                                "s3:List*",
                                "sdb:BatchPutAttributes",
                                "sdb:Select"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        } ]
                    }
               } ]
            }
        },

        "AvDataEMREC2Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2008-10-17",
                    "Statement": [ {
                        "Sid": "",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "ec2.amazonaws.com"
                            ]
                        },
                        "Action": "sts:AssumeRole"
                    } ]
                },
                "Path": "/",
                "Policies": [ {
                    "PolicyName": "root",
                    "PolicyDocument": {
                        "Version" : "2012-10-17",
                        "Statement": [ {
                            "Action": [
                                "cloudwatch:*",
                                "dynamodb:*",
                                "ec2:Describe*",
                                "elasticmapreduce:Describe*",
                                "rds:Describe*",
                                "s3:*",
                                "sdb:*",
                                "sns:*",
                                "sqs:*"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        } ]
                    }
               } ]
            }
        },

        "AvDataEMREC2InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [ { "Ref": "AvDataEMREC2Role" } ]
            }
        }
    }
}
